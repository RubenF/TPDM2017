m <- c(16, "m", 5, 1)
class(m)
# Poker and roulette winnings from Monday to Friday:
poker_vector <- c(140, -50, 20, -120, 240)
roulette_vector <- c(-24, -50, 100, -350, 10)
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
# Which days did you make money on poker?
selection_vector <- poker_vector > 0
selection_vector
poker_winning_days <- poker_vector[selection_vector]
poker_winning_days
matrix(1:9, byrow=TRUE, nrow=3)
library(shiny)
library(shiny)
install.packages("shinydashboard")
## ui.R ##
library(shinydashboard)
dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
#generamos un conjunto de datos
set.seed (2) #seteamos una semilla para trabajar todos con los mismos datos
x=matrix (rnorm (50*2) , ncol =2)
x[1:25 ,1]=x[1:25 ,1]+3
x[1:25 ,2]=x[1:25 ,2] -4
plot(x)
km.out =kmeans (x,2)
km.out$cluster
#dibujamos coloreando los clusters
plot(x, col =(km.out$cluster +1))
#... un poco más lindo
plot(x, col =(km.out$cluster +1) , main="K-Means Clustering Results with K=2", xlab ="", ylab="", pch =20, cex =2)
#generamos un conjunto de datos
set.seed (2) #seteamos una semilla para trabajar todos con los mismos datos
x=matrix (rnorm (50*2) , ncol =2)
x[1:25 ,1]=x[1:25 ,1]+3
x[1:25 ,2]=x[1:25 ,2] -4
plot(x)
#generamos un conjunto de datos
set.seed (2) #seteamos una semilla para trabajar todos con los mismos datos
x=matrix (rnorm (50*2) , ncol =2)
x[1:25 ,1]=x[1:25 ,1]+3
x[1:25 ,2]=x[1:25 ,2] -4
plot(x)
set.seed (2) #seteamos una semilla para trabajar todos con los mismos datos
x=matrix (rnorm (50*2) , ncol =2)
x[1:25 ,1]=x[1:25 ,1]+3
x[1:25 ,2]=x[1:25 ,2] -4
plot(x)
#generamos un conjunto de datos
set.seed (1) #seteamos una semilla para trabajar todos con los mismos datos
x=matrix (rnorm (50*2) , ncol =2)
x[1:25 ,1]=x[1:25 ,1]+3
x[1:25 ,2]=x[1:25 ,2] -4
plot(x)
set.seed (2) #seteamos una semilla para trabajar todos con los mismos datos
x=matrix (rnorm (50*2) , ncol =2)
x[1:25 ,1]=x[1:25 ,1]+3
x[1:25 ,2]=x[1:25 ,2] -4
plot(x)
km.out =kmeans (x,2)
km.out$cluster
#... un poco mÃ¡s lindo
plot(x, col =(km.out$cluster +1) , main="K-Means Clustering Results with K=2", xlab ="", ylab="", pch =20, cex =2)
set.seed (4)
km.out1 =kmeans (x,3)
km.out2 =kmeans (x,3, nstart =20) #para
km.out1$cluster
km.out2$cluster
km.out1$tot.withinss
km.out2$tot.withinss
km.out1$withinss
km.out2$withinss
plot(x, col =(km.out1$cluster +1) , main="K-Means ClusteringResults with K=3", xlab ="", ylab="", pch =20, cex =2)
plot(x, col =(km.out1$cluster +1) , main="K-Means ClusteringResults with K=3", xlab ="", ylab="", pch =20, cex =2)
library(ISLR)
# Install the package
install.packages(c("ngramr", "ggplot2"))
# Load it into R
library(ngramr)
library(ggplot2)
# Case-insensitive search
lines <- ngrami(c("line chart", "line graph"), year_start = 1913)
# Load it into R
library(ngramr)
# Install the package
install.packages(c("ngramr", "ggplot2"))
install.packages(c("ngramr", "ggplot2"))
library(ngramr)
install.packages(c("ngramr", "ggplot2"))
install.packages(c("ngramr", "ggplot2"))
e62<-c(24.46,25.61,26.25,26.42,26.66,27.15,27.31,27.54,27.74,27.94,27.98,28.04,28.28,28.49,28.50,28.87,29.11,29.13,29.50,30.88)
summary(e62)
hist(e62)
e63<-c(44.2, 43.9, 44.7, 44.2, 44.0, 43.8, 44.6, 43.1)
hist(e63)
plot(e63)
summary(e63)
var(e63)
sd(e63)
ej7<-c(10.8, 13.6, 13.2, 13.6, 12.5, 14.2, 14.9, 14.5, 13.4,8.6, 11.5, 16.0, 14.2, 15.0, 12.9, 12.9)
str(ej7)
summary(ej7)
median(ej7)
var(ej7)
sd(ej7)
ej74<-c(9.8, 10.2, 10.4, 9.8, 10.0, 10.2, 9.6)
str(ej74)
summary(ej74)
var(ej74)
sd(ej74)
ej715<-c(1470, 1510, 1690, 1740, 1900, 2000, 2030, 2100, 2190, 2200, 2290, 2380, 2390, 2480, 2500, 2580, 2700)
summary(erj74)
summary(ej74)
var(ej74)
var(ej714)
ej715<-c(1470, 1510, 1690, 1740, 1900, 2000, 2030, 2100, 2190, 2200, 2290, 2380, 2390, 2480, 2500, 2580, 2700)
var(ej714)
var(ej715)
ej714<-c(46.4, 46.1, 45.8, 47.0, 46.1, 45.9, 45.8, 46.9, 45.2, 46.0)
var(ej714)
summary(ej174)
summary(ej714)
ej1<-c(0.01,0.01,0.02,0.09,0.11,0.18,0.39,0.40,0.49,0.52,0.54,0.56,0.67,0.71,0.75,0.84,0.86,0.89,0.95,0.99,1.12,1.25,1.46,1.49,1.57,2.01,2.18,2.70,2.82,3.54)
stem(ej1)
hist(ej1)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=10)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=100)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=20)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=10)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=5)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=10)
Tfalla<-c(0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.04, 0.05, 0.06, 0.07, 0.07, 0.08, 0.09, 0.09, 0.10,
0.10, 0.11, 0.11, 0.12, 0.13, 0.18, 0.19, 0.20, 0.23, 0.80, 0.80, 0.83, 0.85, 0.90, 0.92, 0.95,
0.99, 1.00, 1.01, 1.02, 1.03, 1.05, 1.10, 1.10, 1.11, 1.15, 1.18, 1.20, 1.29, 1.31, 1.33, 1.34,
1.40, 1.43, 1.45, 1.50, 1.51, 1.52, 1.53, 1.54, 1.54, 1.55, 1.58, 1.60, 1.63, 1.64, 1.80, 1.80,
1.81, 2.02, 2.05, 2.14, 2.17, 2.33, 3.03, 3.03, 3.24, 4.20, 4.69, 7.89)
stem(Tfalla)
stem(Tfalla, scale=2)
stem(Tfalla, scale=3)
stem(Tfalla, scale=3)
stem(Tfalla, scale=3)
stem(Tfalla, scale=4)
hist(Tfalla)
stem(Tfalla, scale=2)
stem(Tfalla)
stem(ej1)
hist(ej1)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=10)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=8)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=8)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=16)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=8)
installr
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)}
if(!require(installr)) {
install.packages("installr"); require(installr)}
install.packages("installr")
install.packages("installr")
{
install.packages("installr"); require(installr)}
xyplot(X ~Y3, data = ej21,
xlab = "X",
ylab = "Y",
main = "TPN°2(parte 2) - Ej21 - PLOT 3"
)
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)}
iridio<-c(136.6, 145.2, 151.5, 162.7, 159.1, 159.8, 160.8, 173.9, 160.1,
160.4, 161.1, 160.6, 160.2 ,159.5 ,160.3, 159.2, 159.3, 159.6,
160.0, 160.2, 160.1, 160.0, 159.7 ,159.5, 159.5, 159.6, 159.5)
stem(iridio)
hist(iridio)
rodio<-c(126.4, 135.7, 132.9 ,131.5 ,131.1, 131.1, 131.9 ,132.7,
133.3 ,132.5, 133.0, 133.0, 132.4, 131.6 ,132.6, 132.2,
131.3, 131.2, 132.1, 131.1, 131.4, 131.2, 131.1, 131.1)
stem(rodio)
histogram(rodio)
hist(rodio)
boxplot(iridio)
boxplot(rodio)
boxplot(iridio,rodio)
hist(iridio)
hist(rodio)
ejr1<-c(0.18 ,0.2, 0.62, 0.68 ,0.86, 0.86, 1.19 ,1.28, 1.47, 1.51, 1.68 ,1.74, 1.76, 1.93, 1.95,
2.04, 2.06, 2.10, 2.16, 2.31, 2.55, 2.74, 2.77 ,3.25, 3.49, 4.2, 4.96 ,5.18, 5.87, 5.9)
stem(ejr1)
hist(ejr1)
boxplot(ejr1)
stem(ejr1)
stem(ejr1)
stem(ejr1, scale = 2)
hist(ejr1)
hist(ejr1, breaks = 12)
boxplot(ejr1)
ejr1<-c(0.18 ,0.2, 0.62, 0.68 ,0.86, 0.86, 1.19 ,1.28, 1.47, 1.51, 1.68 ,1.74, 1.76, 1.93, 1.95,
2.04, 2.06, 2.10, 2.16, 2.31, 2.55, 2.74, 2.77 ,3.25, 3.49, 4.2, 4.96 ,5.18, 5.87, 5.9)
stem(ejr1)
stem(ejr1, scale = 2)
hist(ejr1)
hist(ejr1, breaks = 12)
boxplot(ejr1)
boxplot(ejr1)
ejer1
ejr1
ej715<-c(1470, 1510, 1690, 1740, 1900, 2000, 2030, 2100, 2190, 2200, 2290, 2380, 2390, 2480, 2500, 2580, 2700)
summary(ej715)
var(ej715)
ej715
install.packages("plotrix") #gráficos circ con volum
IMCinfantil <- read.csv2
IMCinfantil
attach(IMCinfantil)
IMCinfantil <- read.csv2("C : =::=IMCinfantil:csv")
# Universidad de Buenos Aires.
# Maestria en Explotacion de Datos y Descubrimiento de la Información
# Data Mining
# Trabajo Práctivo 2017
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/ruben_nuc/Desktop/TPDM2017")
#Confirmo mi directorio de trabajo
getwd()
# Importo librerías
# sqldf: Libreria me permite trabajar con SQL
if(!require("sqldf")) install.packages("sqldf")
library(sqldf)
# Libreria ggplot2
if(!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
# String
if(!require("string")) install.packages("string")
library(stringr)
if(!require("dplyr")) install.packages("dplyr")
library(dplyr)
superheroes <- "
name, alignment, gender,         publisher
Magneto,       bad,   male,            Marvel
Storm,      good, female,            Marvel
Mystique,       bad, female,            Marvel
Batman,      good,   male,                DC
Joker,       bad,   male,                DC
Catwoman,       bad, female,                DC
Hellboy,      good,   male, Dark Horse Comics
"
superheroes
str(superheroes)
library("nycflights13")
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
airlines
str(airlines)
dim(airlines)
flights
dim(flights)
flights2 <- flights %>% select(year:day, hour, origin, dest, tailnum, carrier)
flights2
weather
dim(weather)
head(weather)
join1 <- flights2 %>% left_join(weather)
join1
head(flights2)
head(flights2)
head(weather)
head(join1)
dim(flights2)
head(flights2)
dim(weather)
weather
dim(flights2)
flights2
dim(weather)
dim(weather)
weather
dim(planes)
head(planes)
planes
tailnum <- (planes$tailnum)
tailnum
str(tailnum)
dim(planes)
str(planes)
tailf <- as.factor(planes$tailnum)
str(tailf)
join2 <- flights2 %>% left_join(planes, by = "tailnum")
str(join2)
dim(join2)
head(join2)
dim(flights2)
flights2
dim(planes)
planes
dim(join2)
head(join2)
# Universidad de Buenos Aires.
# Maestria en Explotacion de Datos y Descubrimiento de la Información
# Data Mining
# Trabajo Práctivo 2017
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/ruben_nuc/Desktop/TPDM2017")
#Confirmo mi directorio de trabajo
getwd()
# Importo librerías
# sqldf: Libreria me permite trabajar con SQL
if(!require("sqldf")) install.packages("sqldf")
library(sqldf)
# Libreria ggplot2
if(!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
# String
if(!require("string")) install.packages("string")
library(stringr)
if(!require("dplyr")) install.packages("dplyr")
library(dplyr)
#Confirmo mi directorio de trabajo
getwd()
message("Cargando datos...")
ayuda <- read.table("extsup_large.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
ayuda <- read.csv("extsup_large.csv", sep = ";", header = T)
ayuda
dim(ayuda)
str(ayuda)
ged50csv <- read.csv("ged50.csv", sep = ";", header = T)
dim(ged50csv)
dim(ged50csv)
dim(ged50)
# Universidad de Buenos Aires.
# Maestria en Explotacion de Datos y Descubrimiento de la Información
# Data Mining
# Trabajo Práctivo 2017
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/ruben_nuc/Desktop/TPDM2017")
#Confirmo mi directorio de trabajo
getwd()
# Lectura de los datos
# Version RDatafile
message("Cargando datos...")
load("ged50.Rdata")
message("Carga de datos --> LISTO!!!")
dim(ged50)
message("Cargando datos...")
ged50csv <- read.csv("ged50.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
# Carga de datos version csv
message("Cargando datos...")
ged50csv <- read.csv("ged50.csv", sep = ".", header = T)
dim(ged50csv)
# Carga de datos version csv
message("Cargando datos...")
ged50csv <- read.csv("ged50.csv", sep = ",", header = T)
message("Carga de datos --> LISTO!!!")
str(ged50)
str(ged50csv)
# Universidad de Buenos Aires.
# Maestria en Explotacion de Datos y Descubrimiento de la Información
# Data Mining
# Trabajo Práctivo 2017
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/ruben_nuc/Desktop/TPDM2017")
#Confirmo mi directorio de trabajo
getwd()
# Importo librerías
# sqldf: Libreria me permite trabajar con SQL
if(!require("sqldf")) install.packages("sqldf")
library(sqldf)
# Libreria ggplot2
if(!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
# RgoogleMaps
if(!require("RgoogleMaps")) install.packages("RgoogleMaps")
library(RgoogleMaps)
# Carga de datos version csv
message("Cargando datos...")
ged50 <- read.csv("ged50.csv", sep = ",", header = T)
message("Carga de datos --> LISTO!!!")
# Carga de datos version csv
message("Cargando datos...")
ged50 <- read.csv("ged50V4.csv", sep = ",", header = T)
message("Carga de datos --> LISTO!!!")
# Carga de datos version csv
message("Cargando datos...")
ged50 <- read.csv("ged50V4.csv", sep = ",", header = T)
message("Carga de datos --> LISTO!!!")
# Carga de datos version csv
message("Cargando datos...")
ged50 <- read.csv("ged50V4.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
dim(ged50csv)
dim(ged50)
str(ged50)
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/ruben_nuc/Desktop/TPDM2017")
#Confirmo mi directorio de trabajo
getwd()
# Carga de datos version csv
message("Cargando datos...")
ged50 <- read.csv("ged50V4.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
# Carga de datos version csv
message("Cargando datos...")
ayuda <- read.csv("extsup_largeV1.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
str(ged50)
str(ayuda)
dim(ayuda)
str(ged50)
dim(ged50)
dim(ayuda)
# Carga de datos version csv
message("Cargando datos...")
ayuda <- read.csv("extsup_largeV1.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
str(ayuda)
join3 <-  ged50 %>% left_join(ayuda, by = "key1")
join3
head(join3)
dim(join3)
str(join3)
str(join3)
filter(join3, key1 == 1989137Government of Afghanistan - Hizb-i Islami-yi Afghanistan - Khalis faction)
filter(join3, key1 == '1989137Government of Afghanistan - Hizb-i Islami-yi Afghanistan - Khalis faction')
