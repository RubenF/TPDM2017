---
title: "R Notebook"
output: html_notebook
---
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Ctrl+Shift+Enter*.
```{r}
plot(cars)
```
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
When you save the notebook, an HTML file containing the code and output will be saved alongside it (click the *Preview* button or press *Ctrl+Shift+K* to preview the HTML file).
plot(cars)
# Ruben Flecha. 2017.
# Universidad de Buenos Aires. Maestria en Explotacion de Datos y Descubrimiento de la Información
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/e_flecha/Desktop/R_Laboratory")
#Confirmo mi directorio de trabajo
getwd()
# Importo librerias
# La libreria me permite trabajar con SQL
if(!require("sqldf")) install.packages("sqldf")
library(sqldf)
# Libreria ggplot2
if(!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
# Libreria lattice
if(!require("lattice")) install.packages("lattice")
library(lattice)
# Lectura de los datos
wisconsin <- read.table("wisconsin.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
wisconsin
# TP N°1
# Ejercicio 1
# A partir de un relevamiento se determinó los lugares de nacimiento de niños de la villa 31. Los datos se resumen en la siguiente tabla:
ej1 <- data.frame(Lugar_de_Nac= c("CABA", "GBA", "Inte", "Bolivia", "Peru", "Py", "Otros"), Frecuencia=c(695, 110, 122, 83, 22, 64, 12))
ej1
str(ej1)
summary(ej1)
hist(ej1$Frecuencia)
plot(ej1)
y <- barplot(ej1$Frecuencia,
legend= rownames(ej1$Lugar_de_Nac),
main="Bar Plot - Ejercicio 1",
names.arg=ej1$Lugar_de_Nac,
xlab="Lugar de Nacimiento")
#Ejercicio 2
# Cien familias se han clasificado según el número de hijos, resultando los siguientes datos:
ej2 <- data.frame(Nro_Hijos=c(0,1,2,3,4,5,6,7,8), Nro_Familia=c(11,13,20,25,14,10,4,2,1))
ej2
x<- barplot(ej2$Nro_Familia,
#  legend= rownames(ej2$Nro_Hijos),
main="Bar Plot - Ejercicio 2",
names.arg=ej2$Nro_Hijos,
xlab="Número de Hijos")
# Ejercicio 3
ej3 <- c(27,23,22,38,43,24,35,26,28,18,20,25,23,22,52,31,30,41,45,29,27,43,29,28,27,25,29,
28,24,37,28,29,18,26,33,25,27,25,34,32,36,22,32,33,21,23,24,18,48,23,16,38,26,21,23)
#Diagrama de tallo y hojas
stem(ej3)
hist(ej3)
hist(ej3,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=10)
boxplot(ej3)
boxplot(ej3,
range= 100,
main="Box Plot Ejercicio 3",
xlab="Texto Eje x",
ylab="Texto Eje Y",
#xlim = c(0.5, 3.5),
#ylim = c(35, 130),
boxwex= 1,
cex=100,
col = "yellow") #Ojo no se ven los outliers
boxplot(ej3)
boxplot(ej3,
range= 100,
main="Box Plot Ejercicio 3",
xlab="Texto Eje x",
ylab="Texto Eje Y",
#xlim = c(0.5, 3.5),
#ylim = c(5, 130),
boxwex= 1,
cex=100,
col = "yellow") #Ojo no se ven los outliers
#TP 2
#Ejercicio 7
ej7<-c(10.8, 13.6, 13.2, 13.6, 12.5, 14.2, 14.9, 14.5, 13.4,8.6, 11.5, 16.0, 14.2, 15.0, 12.9, 12.9)
summary(ej7)
var(ej7)
#Parcial 5-3
ej1<-c(0.01,0.01,0.02,0.09,0.11,0.18,0.39,0.40,0.49,0.52,0.54,0.56,0.67,0.71,0.75,0.84,0.86,0.89,0.95,0.99,1.12,1.25,1.46,1.49,1.57,2.01,2.18,2.70,2.82,3.54)
stem(ej1)
ej1<-c(0.01,0.01,0.02,0.09,0.11,0.18,0.39,0.40,0.49,0.52,0.54,0.56,0.67,0.71,0.75,0.84,0.86,0.89,0.95,0.99,1.12,1.25,1.46,1.49,1.57,2.01,2.18,2.70,2.82,3.54)
stem(ej1)
hist(ej1)
hist(ej1,
main="Histograma Ejercicio 3",
xlab="Velocidades",
border="blue",
col="green",
#xlim=c(100,700),
#las=1,
breaks=8)
summary(ej1)
quantile(ej1)
var(ej1)
boxplot(ej1)
#Ejemplo libro pag 136
Tfalla<-c(0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.04, 0.05, 0.06, 0.07, 0.07, 0.08, 0.09, 0.09, 0.10,
0.10, 0.11, 0.11, 0.12, 0.13, 0.18, 0.19, 0.20, 0.23, 0.80, 0.80, 0.83, 0.85, 0.90, 0.92, 0.95,
0.99, 1.00, 1.01, 1.02, 1.03, 1.05, 1.10, 1.10, 1.11, 1.15, 1.18, 1.20, 1.29, 1.31, 1.33, 1.34,
1.40, 1.43, 1.45, 1.50, 1.51, 1.52, 1.53, 1.54, 1.54, 1.55, 1.58, 1.60, 1.63, 1.64, 1.80, 1.80,
1.81, 2.02, 2.05, 2.14, 2.17, 2.33, 3.03, 3.03, 3.24, 4.20, 4.69, 7.89)
stem(Tfalla)
stem(Tfalla, scale=2)
hist(Tfalla)
t100<-c(21.8, 21.9, 21.7, 21.6, 21.7)
t125<-c(21.7, 21.4, 21.5, 21.4)
t150<-c(21.9, 21.8, 21.8, 21.6, 21.5)
t175<-c(21.9, 21.7, 21.8, 21.4)
boxplot(t100, t125, t150, t175)
rodio<-c(126.4, 135.7, 132.9 ,131.5 ,131.1, 131.1, 131.9 ,132.7,
133.3 ,132.5, 133.0, 133.0, 132.4, 131.6 ,132.6, 132.2,
131.3, 131.2, 132.1, 131.1, 131.4, 131.2, 131.1, 131.1)
stem(rodio)
hist(rodio)
boxplot(iridio)
boxplot(rodio)
boxplot(iridio,rodio)
iridio<-c(136.6, 145.2, 151.5, 162.7, 159.1, 159.8, 160.8, 173.9, 160.1,
160.4, 161.1, 160.6, 160.2 ,159.5 ,160.3, 159.2, 159.3, 159.6,
160.0, 160.2, 160.1, 160.0, 159.7 ,159.5, 159.5, 159.6, 159.5)
stem(iridio)
hist(iridio)
rodio<-c(126.4, 135.7, 132.9 ,131.5 ,131.1, 131.1, 131.9 ,132.7,
133.3 ,132.5, 133.0, 133.0, 132.4, 131.6 ,132.6, 132.2,
131.3, 131.2, 132.1, 131.1, 131.4, 131.2, 131.1, 131.1)
stem(rodio)
hist(rodio)
boxplot(iridio)
boxplot(rodio)
boxplot(iridio,rodio)
library(RWeka)
library(partykit)
m1 <- J48(Species ~ ., data = iris)
m1
summary(m1) # calls evaluate_Weka_classifier()
table(iris$Species, predict(m1)) # by hand
write_to_dot(m1)
DF2 <- read.arff(system.file("arff", "contact-lenses.arff",
package = "RWeka"))
m2 <- J48(`contact-lenses` ~ ., data = DF2)
m2
table(DF2$`contact-lenses`, predict(m2))
if(require("partykit", quietly = TRUE))
plot(m2)
DF3 <- read.arff(system.file("arff", "cpu.arff", package = "RWeka"))
m3 <- M5P(class ~ ., data = DF3)
m3
plot(m3)
if(require("mlbench", quietly = TRUE)
&& require("partykit", quietly = TRUE))
m3
plot(m3)
if(require("mlbench", quietly = TRUE)
&& require("partykit", quietly = TRUE)) {
## Predict diabetes status for Pima Indian women
data("PimaIndiansDiabetes", package = "mlbench")
## Fit J48 tree with reduced error pruning
m5 <- J48(diabetes ~ ., data = PimaIndiansDiabetes,
control = Weka_control(R = TRUE))
plot(m5)
if(require("mlbench", quietly = TRUE)
&& require("partykit", quietly = TRUE)) {
## Predict diabetes status for Pima Indian women
data("PimaIndiansDiabetes", package = "mlbench")
## Fit J48 tree with reduced error pruning
m5 <- J48(diabetes ~ ., data = PimaIndiansDiabetes,
control = Weka_control(R = TRUE))
plot(m5)
## Logistic Model Tree.
DF4 <- read.arff(system.file("arff", "weather.arff", package = "RWeka"))
m4 <- LMT(play ~ ., data = DF4)
m4
table(DF4$play, predict(m4))
## Logistic Model Tree.
DF4 <- read.arff(system.file("arff", "weather.arff", package = "RWeka"))
m4 <- LMT(play ~ ., data = DF4)
m4
table(DF4$play, predict(m4))
## Logistic Model Tree.
DF4 <- read.arff(system.file("arff", "weather.arff", package = "RWeka"))
m4 <- LMT(play ~ ., data = DF4)
m4
table(DF4$play, predict(m4))
## Logistic Model Tree.
DF4 <- read.arff(system.file("arff", "weather.arff", package = "RWeka"))
m4 <- LMT(play ~ ., data = DF4)
m4
table(DF4$play, predict(m4))
## Logistic Model Tree.
DF4 <- read.arff(system.file("arff", "weather.arff", package = "RWeka"))
m4 <- LMT(play ~ ., data = DF4)
m4
table(DF4$play, predict(m4))
# Ruben Flecha. 2017.
# Universidad de Buenos Aires. Maestria en Explotacion de Datos y Descubrimiento de la Información
# Práctica 2017
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/e_flecha/Desktop/R_Lab")
rm(list=ls()) # Eli
# PRUEBAS
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
#setwd("C:/Users/ruben_nuc/Desktop/TPDM2017")
setwd("C:/Users/e_flecha/Documents/GitHub/TPDM2017")
#Confirmo mi directorio de trabajo
getwd()
# Importo librerías
# sqldf: Libreria me permite trabajar con SQL
if(!require("sqldf")) install.packages("sqldf")
library(sqldf)
# Libreria ggplot2
if(!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
if(!require("dplyr")) install.packages("dplyr")
library(dplyr)
if(!require("data.table")) install.packages("data.table")
library(data.table)
message("Cargando datos...")
ged50v5 <- read.csv("ged50V5.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
fil5 <-filter(select(fil, year, conflict_dset_id, dyad_name, side_a, side_b, total_dias, number_deaths), conflict_dset_id==1-171)
if(!require("dplyr")) install.packages("dplyr")
library(dplyr)
if(!require("data.table")) install.packages("data.table")
library(data.table)
message("Cargando datos...")
ged50v5 <- read.csv("ged50V5.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
ged50v5_short <- select(ged50v5, id, year,  conflict_dset_id, dyad_name, side_a, side_b, duration, best_est)
head(ged50v5_short)
dim(ged50v5_short)
str(ged50v5_short)
typeof(ged50v5_short)
fil<- (  ged50v5_short %>%
group_by(year,conflict_dset_id, dyad_name,side_a, side_b) %>%
summarize(total_dias = sum(duration),number_deaths= sum(best_est)))
fil
head(ged50v5)
# El group by!
fil<- (  ged50v5_short %>%
group_by(year,conflict_dset_id, dyad_name,side_a, side_b) %>%
summarize(total_dias = sum(duration),number_deaths= sum(best_est)))
fil
# Universidad de Buenos Aires.
# Maestria en Explotacion de Datos y Descubrimiento de la Información
# Data Mining
# Trabajo Práctivo 2017
# Alumnos:  Ferrari, Mauricio
#           Flecha, Rubén
#           Gil, Myriam
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/e_flecha/Documents/GitHub/TPDM2017")
# C:\Users\e_flecha\Desktop\TPDM2017
# C:\Users\e_flecha\Documents\GitHub\TPDM2017
#Confirmo mi directorio de trabajo
getwd()
if(!require("sqldf")) install.packages("sqldf")
library(sqldf)
if(!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
if(!require("RgoogleMaps")) install.packages("RgoogleMaps")
library(RgoogleMaps)
if(!require("dplyr")) install.packages("dplyr")
library(dplyr)
if(!require("data.table")) install.packages("data.table")
library(data.table)
# Carga de datos version csv
message("Cargando datos...")
ged50 <- read.csv("ged50V4.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
dim(ged50)
ged50v5_short <- select(ged50v5, id, year,  conflict_dset_id, dyad_name, side_a, side_b, duration, best_est)
message("Cargando datos...")
ged50v5 <- read.csv("ged50V5.csv", sep = ";", header = T)
message("Carga de datos --> LISTO!!!")
ged50v5_short <- select(ged50v5, id, year,  conflict_dset_id, dyad_name, side_a, side_b, duration, best_est)
head(ged50v5_short)
# El group by!
fil<- (  ged50v5_short %>%
group_by(year,conflict_dset_id, dyad_name,side_a, side_b) %>%
summarize(total_dias = sum(duration),number_deaths= sum(best_est)))
head(fil)
fil<-fil[order(fil$year, fil$conflict_dset_id)]
fil<-fil[order(fil$year, fil$conflict_dset_id)]
head(fil)
fil[1:20,]
str(fil)
fil<-fil[order(fil$conflict_dset_id)]
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/e_flecha/OneDrive - Farmacity/GitHub/TPDM2017")
# C:\Users\e_flecha\Desktop\TPDM2017
# C:\Users\e_flecha\Documents\GitHub\TPDM2017
rm(list=ls()) # Elimino todo lo que haya en memoria
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/e_flecha/OneDrive - Farmacity/GitHub/TPDM2017")
# C:\Users\e_flecha\Desktop\TPDM2017
# C:\Users\e_flecha\Documents\GitHub\TPDM2017
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/e_flecha/OneDrive - Farmacity/GitHub/TP2")
# C:\Users\e_flecha\Desktop\TPDM2017
# C:\Users\e_flecha\Documents\GitHub\TPDM2017
jester <- read.csv ('jester-data-1.csv', header = TRUE, dec = '.')
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/e_flecha/Documents/GitHub/TP2")
# C:\Users\e_flecha\Documents\GitHub\TPDM2017
jester <- read.csv ('jester-data-1.csv', header = TRUE, dec = '.')
jester
reglas <- apriori(jester, parameter=list(support=0.11,confidence = 0.75))
if(!require("sqldf")) install.packages("sqldf")
library(sqldf)
if(!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)
if(!require("RgoogleMaps")) install.packages("RgoogleMaps")
library(RgoogleMaps)
if(!require("dplyr")) install.packages("dplyr")
library(dplyr)
if(!require("arules")) install.packages("arules")
library(arules)
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
setwd("C:/Users/e_flecha/Documents/GitHub/TP2")
# C:\Users\e_flecha\Desktop\TPDM2017
# C:\Users\e_flecha\Documents\GitHub\TPDM2017
jester <- read.csv ('jester-data-1.csv', header = TRUE, dec = '.')
reglas <- apriori(jester, parameter=list(support=0.11,confidence = 0.75))
jester_d <- jester
rangos <- function (){
for (x in 1:100 ) {
J <- paste("J",x,sep="")
jester_d[[J]] <<- ordered(cut (jester[[J]], c(-10,-5,0,1,5,10),
labels = c("M","R","B","MB","E")))
}
}
rangos()
jester_d [["Jokes"]] <- NULL
fix(jester_d)
summary(reglas)
reglas <- apriori(jester, parameter=list(support=0.11,confidence = 0.75))
rangos <- function (){
for (x in 1:100 ) {
J <- paste("J",x,sep="")
jester_d[[J]] <<- ordered(cut (jester[[J]], c(-10,-5,0,1,5,10),
labels = c("M","R","B","MB","E")))
}
}
rangos()
reglas <- apriori(jester, parameter=list(support=0.11,confidence = 0.75))
rangos()
jester_d [["Jokes"]] <- NULL
reglas <- apriori(jester, parameter=list(support=0.11,confidence = 0.75))
library(arules)
rm(list=ls()) # El
# C:\Users\e_flecha\Documents\GitHub\TPDM2017
jester <- read.csv ('jester-data-1.csv', header = TRUE, dec = '.')
reglas <- apriori(jester, parameter=list(support=0.11,confidence = 0.75))
rangos <- function (){
for (x in 1:100 ) {
J <- paste("J",x,sep="")
jester_d[[J]] <<- ordered(cut (jester[[J]], c(-10,-5,0,1,5,10),
labels = c("M","R","B","MB","E")))
}
}
rangos()
jester_d [["Jokes"]] <- NULL
fix(jester_d)
reglas <- apriori(jester, parameter=list(support=0.11,confidence = 0.75))
reglas <- apriori(jester_d, parameter=list(support=0.11,confidence = 0.75))
summary(reglas)
jester_d [["Jokes"]] <- NULL
rangos <- function (){
for (x in 1:100 ) {
J <- paste("J",x,sep="")
jester_d[[J]] <<- ordered(cut (jester[[J]], c(-10,-5,0,1,5,10),
labels = c("M","R","B","MB","E")))
}
}
jester_d <- jester
rangos <- function (){
for (x in 1:100 ) {
J <- paste("J",x,sep="")
jester_d[[J]] <<- ordered(cut (jester[[J]], c(-10,-5,0,1,5,10),
labels = c("M","R","B","MB","E")))
}
}
rangos()
jester_d [["Jokes"]] <- NULL
fix(jester_d)
reglas <- apriori(jester_d, parameter=list(support=0.11,confidence = 0.75))
summary(reglas)
inspect(sort(reglas, by = "lift"))
inspect(head(reglas,n=10))
reglasJ32consecuente <-subset(reglas, subset = rhs %in% "J32=" )
reglasJ13antecedente <-subset(reglas, subset = lhs %in% "J13=" )
reglasSupport <-subset(reglas, subset = support > 0.2 )
reglasLift <-subset(reglas, lift > 1.5)
it <- items(reglas)
it
fix(it)
esCerrado <- is.closed(it)
?is.closed
if(!require("arules")) install.packages("arules")
library(arules)
typeof(it)
it <- items(reglas)
it
typeof(it)
esCerrado <- is.closed(it)
?is.closed
esMaximo <- is.maximal(it)
esMaximo
write.PMML(reglas, file = "rules.xml")
if(!require("pmml")) install.packages("pmml")
library(pmml)
write.PMML(reglas, file = "rules.xml")
esMaximo <- is.maximal(it)
esMaximo
import <- read.csv ('import_reducido.csv', header = TRUE, dec = '.')
import
reglas <- apriori(import, parameter=list(support=0.11,confidence = 0.75))
reglas <- apriori(import, parameter=list(support=0.11,confidence = 0.75))
str(import)
rm(list=ls()) # Elimino todo lo que haya en memoria
# Defino el directoria de trabajo
#setwd("C:/Users/ruben_nuc/Desktop/TPDM2017")
setwd("C:/Users/e_flecha/Documents/GitHub/TPDM2017")
#Confirmo mi directorio de trabajo
getwd()
